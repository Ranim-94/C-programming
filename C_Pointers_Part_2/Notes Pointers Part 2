



1- Conerning the compiler gcc:
	gcc -g main.c -o prog

-g: is the debug symbol


2- we can also output the assembly file for the main.c using gcc
	gcc -S main.c 
this will output a file named main.S which contains the assembly representation of our C file.


3- the tool objdump: this is a tool to inspect binary file (like the prog for example) . It can be very useful when debugging or trying to understand what is goig on during compilation process.

  - Command to use it: objdump -t prog
  	-t: for table, and prog is the input we give (the binary file)	


4- Function pointer notions:
 -function as variables, have addresses also
 - definition: ability to store a function address of a specific function signature (declaration) -> encapsulate the behaviour of a function as pointer
  - using these notions, we can implment our own OOP in C 
  
  
5 void pointers note:
   -  void pointers: pointers that are not assoicated with any data type
   - like any pointers, they also store addresses, and they can point (after assignment)
    to any data type
   -In C, we can't dereference a void pointer directly by using the * operator
    We need to cast the void pointer to the correspondent pointer type, then dereferencing
   - In C standard, we can't use pointer arithmetic, but some compiler do support this feature.
 
	
